openapi: 3.1.0
info:
  title: Mannerisms API
  version: 1.0.0
  description: API for the Mannerisms app - helping users improve their social etiquette

servers:
  - url: http://localhost:8000
    description: Local development server

components:
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          tokenUrl: /token
          scopes: {}

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - username
        - created_at

    Question:
      type: object
      properties:
        id:
          type: integer
        question:
          type: string
        options:
          type: array
          items:
            type: string
        correct_answer:
          type: string
        explanation:
          type: string
        category:
          type: string
        difficulty:
          type: string
        created_at:
          type: string
          format: date-time
      required:
        - question
        - options
        - correct_answer
        - explanation
        - category
        - difficulty
        - created_at

    UserProgress:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        score:
          type: integer
        completed_questions:
          type: array
          items:
            type: integer
        last_activity:
          type: string
          format: date-time
      required:
        - user_id
        - score
        - completed_questions
        - last_activity

    Token:
      type: object
      properties:
        access_token:
          type: string
        token_type:
          type: string
      required:
        - access_token
        - token_type

    UserCreate:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password

    QuestionCreate:
      type: object
      properties:
        question:
          type: string
        options:
          type: array
          items:
            type: string
        correct_answer:
          type: string
        explanation:
          type: string
        category:
          type: string
        difficulty:
          type: string
      required:
        - question
        - options
        - correct_answer
        - explanation
        - category
        - difficulty

paths:
  /token:
    post:
      summary: Login to get access token
      operationId: login_for_access_token
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        "200":
          description: Successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Token"
        "401":
          description: Invalid credentials

  /users/:
    post:
      summary: Create new user
      operationId: create_user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "200":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Username already registered

  /questions/:
    get:
      summary: Get all questions
      operationId: get_questions
      responses:
        "200":
          description: List of questions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Question"
    post:
      summary: Create new question
      operationId: create_question
      security:
        - OAuth2PasswordBearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuestionCreate"
      responses:
        "200":
          description: Question created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Question"
        "401":
          description: Not authenticated

  /questions/{question_id}/answer:
    post:
      summary: Submit answer for a question
      operationId: submit_answer
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: question_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                answer:
                  type: string
              required:
                - answer
      responses:
        "200":
          description: Answer submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  correct:
                    type: boolean
                  explanation:
                    type: string
                required:
                  - correct
                  - explanation
        "401":
          description: Not authenticated
        "404":
          description: Question not found

  /progress/:
    get:
      summary: Get user progress
      operationId: get_user_progress
      security:
        - OAuth2PasswordBearer: []
      responses:
        "200":
          description: User progress
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProgress"
        "401":
          description: Not authenticated
